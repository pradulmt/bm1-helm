apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "loki.fullname" . }}
  namespace: {{ .Values.global.namespace.name }}
  labels:
    {{- include "loki.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "loki.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "loki.selectorLabels" . | nindent 8 }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: loki
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-config.file=/etc/loki/loki.yaml"
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki
            - name: loki-storage
              mountPath: /data
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
        - name: loki-storage
          emptyDir: {}
        - name: loki-config
          configMap:
            name: loki-config
