---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: launchpad-hr
  namespace: default
spec:
  chart:
    spec:
      chart: ./launchpad
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: GitRepository
        name: launchpad-source
  interval: 5m0s
  releaseName: launchpad
  values:
    alertmgr:
      alertmgr:
        affinity: {}
        capabilities: []
        image:
          pullPolicy: IfNotPresent
          repository: artifactory.riftio.com/docker-hub/prom/alertmanager
          tag: v0.21.0-rc.0
        nodeSelector: {}
        ports:
          rwalert: 9093
        resources: {}
        service:
          type: ClusterIP
        tolerations: []
      alertmgrStorage:
        capacity: 20Gi
        localStore: {}
        manual: {}
        nfs: {}
      alertmgrfullnameOverride: ""
      fullnameOverride: ""
      global:
        hostAliases: []
        imagePullSecrets: []
        ingress:
          class:
            name: ha-proxy
          createClusterRole: false
          ports:
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443
          - name: mongo
            port: 8006
            protocol: TCP
            targetPort: 8006
          - name: redis-tunnel
            port: 8014
            protocol: TCP
            targetPort: 8014
          service:
            type: LoadBalancer
        namespace:
          create: true
          name: pthattio2
      imagePullSecrets: []
      nameOverride: ""
      podAnnotations: {}
      podSecurityContext: {}
      replicaCount: 1
      securityContext: {}
    externalAddress: null
    fullnameOverride: ""
    global:
      hostAliases: []
      imagePullSecrets: []
      ingress:
        class:
          name: ha-proxy
        createClusterRole: false
        ports:
        - name: https
          port: 443
          protocol: TCP
          targetPort: 8443
        - name: mongo
          port: 8006
          protocol: TCP
          targetPort: 8006
        - name: redis-tunnel
          port: 8014
          protocol: TCP
          targetPort: 8014
        service:
          type: LoadBalancer
      namespace:
        create: true
        name: pthattio2
    grafana:
      fullnameOverride: ""
      global:
        hostAliases: []
        imagePullSecrets: []
        ingress:
          class:
            name: ha-proxy
          createClusterRole: false
          ports:
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443
          - name: mongo
            port: 8006
            protocol: TCP
            targetPort: 8006
          - name: redis-tunnel
            port: 8014
            protocol: TCP
            targetPort: 8014
          service:
            type: LoadBalancer
        namespace:
          create: true
          name: pthattio2
      grafana:
        affinity: {}
        capabilities: []
        image:
          pullPolicy: IfNotPresent
          repository: artifactory.riftio.com/docker/rw.grafana
          tag: 1.4
        nodeSelector: {}
        provisioning: /config/provisioning
        resources: {}
        service:
          port: 8300
          type: ClusterIP
        tolerations: []
      grafanaStorage:
        capacity: 20Gi
        localStore: {}
        manual: {}
        nfs: {}
      grafanafullnameOverride: ""
      imagePullSecrets: []
      nameOverride: ""
      podAnnotations: {}
      podSecurityContext: {}
      replicaCount: 1
      securityContext: {}
    grafanafullnameOverride: ""
    haproxy-ingress:
      affinity: {}
      bindPort:
        http: :8080
        https: :8443
      cloudSpecificServiceSpec: {}
      defaultbackend:
        image:
          pullPolicy: IfNotPresent
          repository: artifactory.riftio.com/gcr.io/google_containers/defaultbackend
          tag: "1.0"
      exporter:
        image:
          pullPolicy: IfNotPresent
          repository: artifactory.riftio.com/quay.io/prometheus/haproxy-exporter
          tag: v0.11.0
      fullnameOverride: ""
      global:
        hostAliases: []
        imagePullSecrets: []
        ingress:
          class:
            name: ha-proxy
          createClusterRole: false
          ports:
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443
          - name: mongo
            port: 8006
            protocol: TCP
            targetPort: 8006
          - name: redis-tunnel
            port: 8014
            protocol: TCP
            targetPort: 8014
          service:
            type: LoadBalancer
        namespace:
          create: true
          name: pthattio2
      image:
        pullPolicy: IfNotPresent
        repository: artifactory.riftio.com/quay.io/jcmoraisjr/haproxy-ingress
        repository_latest: artifactory.riftio.com/docker/haproxy-ingress
        tag: v0.10.1
        tag_latest: v0.11.9-rift
      imagePullSecrets: []
      nameOverride: ""
      nodeSelector: {}
      podAnnotations: {}
      podSecurityContext: {}
      replicaCount: 1
      resources: {}
      securityContext: {}
      serviceAccount:
        annotations: {}
        create: true
        name: ""
      serviceAnnotations: {}
      tolerations: []
    launchpad:
      affinity: {}
      capabilities: []
      coreDir: null
      env:
        DEVELOPER_LICENSE: 1
        RW_RUNTIME_PROFILE: systest
      fluxcdAdaptor:
        enabled: false
        project: default
      image:
        imagePullSecrets: []
        pullPolicy: IfNotPresent
        repository: artifactory.riftio.com/docker/launchpad/dzs
        tag: 10.1.2.0.124576
      nodeSelector: {}
      ports:
      - name: rwrest
        port: 8008
      - name: rwauth
        port: 8009
      - name: rwui
        port: 8443
      - name: rwredis
        port: 8014
      - name: rwmongo
        port: 8006
      primitiveExec:
        image:
          pullPolicy: IfNotPresent
          repository: artifactory.riftio.com/docker/rw-primitive-exec
          tag: 0.13
      resources: {}
      securityContext:
        enabled: true
        fsGroup: 2997
        runAsGroup: 3064
        runAsUser: 3015
      service:
        type: ClusterIP
      tolerations: []
      upgradeFrom: 10.1.2.0.124576
    loki:
      affinity: {}
      enabled: false
      fullnameOverride: ""
      global:
        hostAliases: []
        imagePullSecrets: []
        ingress:
          class:
            name: ha-proxy
          createClusterRole: false
          ports:
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443
          - name: mongo
            port: 8006
            protocol: TCP
            targetPort: 8006
          - name: redis-tunnel
            port: 8014
            protocol: TCP
            targetPort: 8014
          service:
            type: LoadBalancer
        namespace:
          create: true
          name: pthattio2
      image:
        pullPolicy: IfNotPresent
        repository: grafana/loki
        tag: 1.6.0
      imagePullSecrets: []
      nameOverride: ""
      nodeSelector: {}
      podAnnotations: {}
      podSecurityContext: {}
      securityContext: {}
      service:
        port: 3100
        type: ClusterIP
      servicePort: 3100
      serviceScheme: http
      tolerations: []
    mongodb:
      affinity: {}
      annotations: {}
      arbiter:
        affinity: {}
        annotations: {}
        configuration: ""
        containerSecurityContext:
          enabled: true
          runAsUser: 1001
        customLivenessProbe: {}
        customReadinessProbe: {}
        enabled: false
        extraEnvVars: []
        extraFlags: []
        extraVolumeMounts: []
        extraVolumes: []
        initContainers: {}
        labels: {}
        livenessProbe:
          enabled: true
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        nodeSelector: {}
        pdb:
          create: false
          minAvailable: 1
        podAnnotations: {}
        podLabels: {}
        podSecurityContext:
          enabled: true
          fsGroup: 1001
          sysctls: []
        readinessProbe:
          enabled: true
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests: {}
        sidecars: {}
        tolerations: []
      architecture: standalone
      auth:
        enabled: false
        replicaSetKey: ""
        rootPassword: ""
      busybox:
        image:
          pullPolicy: IfNotPresent
          repository: artifactory.riftio.com/docker-hub/busybox
      clusterDomain: cluster.local
      common:
        exampleValue: common-chart
        global:
          hostAliases: []
          imagePullSecrets: []
          ingress:
            class:
              name: ha-proxy
            createClusterRole: false
            ports:
            - name: https
              port: 443
              protocol: TCP
              targetPort: 8443
            - name: mongo
              port: 8006
              protocol: TCP
              targetPort: 8006
            - name: redis-tunnel
              port: 8014
              protocol: TCP
              targetPort: 8014
            service:
              type: LoadBalancer
          namespace:
            create: true
            name: pthattio2
      configuration: ""
      containerSecurityContext:
        enabled: true
        runAsNonRoot: true
        runAsUser: 3015
      customLivenessProbe: {}
      customReadinessProbe: {}
      directoryPerDB: false
      disableSystemLog: false
      enableIPv6: false
      externalAccess:
        autoDiscovery:
          enabled: false
          image:
            pullPolicy: IfNotPresent
            pullSecrets: []
            registry: docker.io
            repository: bitnami/kubectl
            tag: 1.18.9-debian-10-r4
          resources:
            limits: {}
            requests: {}
        enabled: false
        service:
          annotations: {}
          loadBalancerIPs: []
          loadBalancerSourceRanges: []
          nodePorts: []
          port: 8006
          type: LoadBalancer
      extraEnvVars: []
      extraFlags: []
      extraVolumeMounts: []
      extraVolumes: []
      global:
        hostAliases: []
        imagePullSecrets: []
        ingress:
          class:
            name: ha-proxy
          createClusterRole: false
          ports:
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443
          - name: mongo
            port: 8006
            protocol: TCP
            targetPort: 8006
          - name: redis-tunnel
            port: 8014
            protocol: TCP
            targetPort: 8014
          service:
            type: LoadBalancer
        namespace:
          create: true
          name: pthattio2
      image:
        debug: false
        pullPolicy: IfNotPresent
        registry: artifactory.riftio.com
        repository: docker-hub/bitnami/mongodb
        tag: 4.0.21-debian-9-r10
      initContainers: {}
      initdbScripts: {}
      labels: {}
      livenessProbe:
        enabled: true
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      metrics:
        enabled: true
        extraFlags: ""
        extraUri: ""
        image:
          pullPolicy: IfNotPresent
          registry: artifactory.riftio.com
          repository: docker-hub/bitnami/mongodb-exporter
          tag: 0.11.1-debian-10-r32
        livenessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        prometheusRule:
          additionalLabels: {}
          enabled: false
          rules: {}
        readinessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits: {}
          requests: {}
        service:
          port: 9216
          type: ClusterIP
        serviceMonitor:
          additionalLabels: {}
          enabled: false
          interval: 30s
      mongoStorage:
        capacity: 80Gi
        localStore: {}
        manual: {}
        nfs: {}
      nodeSelector: {}
      pdb:
        create: false
        minAvailable: 1
      persistence:
        accessModes:
        - ReadWriteOnce
        annotations: {}
        enabled: false
        mountPath: /data
        size: 80Gi
        subPath: ""
      podAnnotations: {}
      podLabels: {}
      podManagementPolicy: OrderedReady
      podSecurityContext:
        enabled: true
        fsGroup: 2997
        sysctls: []
      rbac:
        create: false
      readinessProbe:
        enabled: true
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      replicaCount: 2
      replicaSetHostnames: true
      replicaSetName: rs0
      resources:
        limits: {}
        requests: {}
      service:
        annotations: {}
        externalIPs: []
        loadBalancerSourceRanges: []
        nodePort: ""
        port: 8006
        portName: mongodb
        type: ClusterIP
      serviceAccount:
        create: false
      sidecars: {}
      strategyType: RollingUpdate
      systemLogVerbosity: 0
      tolerations: []
      useStatefulSet: true
      volumePermissions:
        enabled: false
        image:
          pullPolicy: Always
          pullSecrets: []
          registry: docker.io
          repository: bitnami/minideb
          tag: buster
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsUser: 0
    nameOverride: ""
    nats:
      affinity: {}
      exporter:
        image:
          pullPolicy: IfNotPresent
          repository: artifactory.riftio.com/docker-hub/bitnami/nats-exporter
          tag: 0.6.2-debian-10-r152
      fullnameOverride: ""
      global:
        hostAliases: []
        imagePullSecrets: []
        ingress:
          class:
            name: ha-proxy
          createClusterRole: false
          ports:
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443
          - name: mongo
            port: 8006
            protocol: TCP
            targetPort: 8006
          - name: redis-tunnel
            port: 8014
            protocol: TCP
            targetPort: 8014
          service:
            type: LoadBalancer
        namespace:
          create: true
          name: pthattio2
      image:
        pullPolicy: IfNotPresent
        repository: artifactory.riftio.com/docker-hub/nats
        tag: 2.1.8
      imagePullSecrets: []
      nameOverride: ""
      nodeSelector: {}
      podAnnotations: {}
      podSecurityContext: {}
      replicaCount: 1
      resources: {}
      securityContext: {}
      service:
        port: 4222
        type: ClusterIP
      tolerations: []
    natsfullnameOverride: ""
    prometheus:
      containerSecurityContext:
        runAsUser: 3015
      externalAddress: null
      fullnameOverride: ""
      global:
        hostAliases: []
        imagePullSecrets: []
        ingress:
          class:
            name: ha-proxy
          createClusterRole: false
          ports:
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443
          - name: mongo
            port: 8006
            protocol: TCP
            targetPort: 8006
          - name: redis-tunnel
            port: 8014
            protocol: TCP
            targetPort: 8014
          service:
            type: LoadBalancer
        namespace:
          create: true
          name: pthattio2
      imagePullSecrets: []
      nameOverride: ""
      podAnnotations: {}
      podSecurityContext:
        fsGroup: 2997
      prometheus:
        affinity: {}
        busybox:
          image:
            pullPolicy: IfNotPresent
            repository: artifactory.riftio.com/docker-hub/busybox
        capabilities: []
        configWatch:
          image:
            pullPolicy: IfNotPresent
            repository: artifactory.riftio.com/docker-hub/weaveworks/watch
            tag: master-5b2a6e5
        image:
          pullPolicy: IfNotPresent
          repository: artifactory.riftio.com/quay.io/prometheus/prometheus
          tag: v2.20.0-rc.1
        nodeSelector: {}
        ports:
          rwprom: 9090
        resources: {}
        service:
          type: ClusterIP
        tolerations: []
      prometheusStorage:
        capacity: 80Gi
        localStore: {}
        manual: {}
        nfs: {}
      prometheusfullnameOverride: ""
      replicaCount: 1
    prometheusfullnameOverride: ""
    redis:
      affinity: {}
      busybox:
        image:
          pullPolicy: IfNotPresent
          repository: artifactory.riftio.com/docker-hub/busybox
      containerSecurityContext:
        runAsUser: 3015
      exporter:
        image:
          pullPolicy: IfNotPresent
          repository: artifactory.riftio.com/docker-hub/oliver006/redis_exporter
          tag: v1.12.0
      fullnameOverride: ""
      global:
        hostAliases: []
        imagePullSecrets: []
        ingress:
          class:
            name: ha-proxy
          createClusterRole: false
          ports:
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443
          - name: mongo
            port: 8006
            protocol: TCP
            targetPort: 8006
          - name: redis-tunnel
            port: 8014
            protocol: TCP
            targetPort: 8014
          service:
            type: LoadBalancer
        namespace:
          create: true
          name: pthattio2
      image:
        pullPolicy: IfNotPresent
        repository: artifactory.riftio.com/docker-hub/redis
        tag: 6.0.8
      imagePullSecrets: []
      nameOverride: ""
      nodeSelector: {}
      podAnnotations: {}
      podSecurityContext:
        fsGroup: 2997
      redTunnel:
        image:
          pullPolicy: IfNotPresent
          repository: artifactory.riftio.com/docker/rw-redtunnel
          tag: 0.7
      redisStorage:
        capacity: 80Gi
        localStore: {}
        manual: {}
        nfs: {}
      replicaCount: 1
      resources: {}
      securityContext: {}
      service:
        port: 8012
        type: ClusterIP
      tolerations: []
    redisfullnameOverride: ""
    replicaCount: 1
    storage:
      capacity: 80Gi
      localStore: {}
      manual: {}
      nfs: {}
      storageClassName: null

